{"version":3,"sources":["utils/dataUtils.js","components/ComboBox.js","components/TimeAutocomplete.js","components/OpeningHours.js","components/OrganisationCard.js","components/Search.js","components/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["timeslots","data","removeSexProvinces","provinces","reduce","arr","curr","i","toLowerCase","includes","weekDays","locale","baseDate","Date","UTC","push","toLocaleDateString","weekday","setDate","getDate","getWeekDays","console","log","DataUtils","getData","getProvinces","isRemoveSexProvinces","indexOf","place","getOrganisationsByProvince","province","orgs","timeslot","existingOrganisationIndex","findIndex","ts","organisation","toLocaleLowerCase","openingHours","day","daypart","hour","startTime","endTime","free","name","address","email","website","sort","a","b","filter","org","ComboBox","props","Autocomplete","id","options","onChange","event","newValue","getOptionLabel","option","title","style","width","display","renderInput","params","TextField","autoFocus","variant","label","times","defaultValue","find","v","verticalAlign","moment","OpeningHours","getRelativeTime","handleRelativeClick","setState","open","state","currentDay","Intl","DateTimeFormat","format","this","relativeTime","List","dense","ListItem","cursor","onClick","ListItemText","fontWeight","primary","map","oh","selected","paddingTop","paddingBottom","Component","useStyles","makeStyles","root","marginBottom","maxWidth","margin","bullet","transform","fontSize","OrganisationCard","classes","Card","className","CardContent","Typography","component","pos","color","Button","size","startIcon","href","Box","styled","div","Search","handleChange","selectedItem","val","year","React","theme","flexGrow","menuButton","marginRight","spacing","ButtonAppBar","AppBar","position","Toolbar","IconButton","edge","aria-label","palette","values","xs","sm","md","lg","xl","App","useMemo","createTheme","breakpoints","keys","up","key","blue","secondary","main","ThemeProvider","CssBaseline","p","dataUtils","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43e4b5f.chunk.js","sourcesContent":["// @flow\nimport data from \"../data/soatest.json\";\n\ntype RawTimeslot = {\n  place: string, // province\n  appointment: string,\n  free: string,\n  day: string,\n  daypart: string,\n  hour: string,\n  organisation: string, // testcenter\n  address: string,\n  telephone: string,\n  email: string,\n  website: string,\n};\n\ntype Organisation = {\n  province: string, // province\n  name: String,\n  free: Boolean,\n  organisation: String,\n  address: String,\n  email: String,\n  website: String,\n};\n\nvar timeslots: [RawTimeslot] = data;\n\nfunction removeSexProvinces(provinces: Provinces): [Provinces] {\n  return provinces.reduce((arr, curr, i) => {\n    if (curr.toLowerCase().includes(\"sex\")) {\n      return arr;\n    }\n    return [...arr, curr];\n  }, []);\n}\nfunction getWeekDays(locale) {\n  var baseDate = new Date(Date.UTC(2017, 0, 2)); // just a Monday\n  var weekDays = [];\n  for (var i = 0; i < 7; i++) {\n    weekDays.push(baseDate.toLocaleDateString(locale, { weekday: \"long\" }));\n    baseDate.setDate(baseDate.getDate() + 1);\n  }\n  return weekDays;\n}\nvar weekDays = getWeekDays(\"en-EN\");\n\nconsole.log(weekDays);\nfunction getOrganisations(): [Organisation] {\n  return timeslots.reduce((orgs, timeslot, i) => {\n    var existingOrganisationIndex = orgs.findIndex(\n      (ts) =>\n        timeslot.organisation.toLocaleLowerCase() ===\n        ts.organisation.toLocaleLowerCase()\n    );\n    // console.log(existingOrganisationIndex);\n    // console.log(weekDays.indexOf(timeslot.day))\n    var openingHours = {\n      day: timeslot.day,\n      weekday: weekDays.indexOf(timeslot.day),\n      daypart: timeslot.daypart,\n      hour: timeslot.hour,\n      startTime: timeslot.startTime,\n      endTime: timeslot.endTime,\n      free: timeslot.free === \"yes\",\n    };\n    if (existingOrganisationIndex < 0) {\n      var organisation = {\n        province: timeslot.place,\n        name: timeslot.organisation,\n        free: timeslot.free === \"yes\",\n        openingHours: [\n          openingHours,\n        ],\n        organisation: timeslot.organisation,\n        address: timeslot.address,\n        email: timeslot.email,\n        website: timeslot.website,\n      };\n\n      orgs = [...orgs, organisation];\n    } else {\n      orgs[existingOrganisationIndex].openingHours = [\n        ...orgs[existingOrganisationIndex].openingHours,\n        openingHours,\n      ].sort((a, b) => (a.weekday > b.weekday) ? 1 : -1);\n      // return orgs;\n    }\n    \n    return orgs;\n  }, []);\n}\nfunction getProvinces(isRemoveSexProvinces: Boolean = true): [Provinces] {\n  var provinces = data.reduce((arr, curr, i) => {\n    if (arr.indexOf(curr.place) > -1) {\n      return arr;\n    }\n    return [curr.place, ...arr];\n  }, []);\n\n  if (isRemoveSexProvinces === true) {\n    return removeSexProvinces(provinces);\n  }\n  return provinces;\n}\n\nvar DataUtils: Timeslot = {\n  getData: () => {\n    return timeslots;\n  },\n\n  getProvinces: (): [Provinces] => {\n    return getProvinces(true);\n  },\n\n  getOrganisationsByProvince: (province): [Organisation] => {\n    var organisations = getOrganisations();\n\n    var provinceOrganisations = organisations.filter(function (org) {\n      return org.province === province;\n    });\n    return provinceOrganisations;\n  },\n};\n\nexport default DataUtils;\n","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function ComboBox(props) {\n  return (\n    <Autocomplete\n      id=\"combo-box-demo\"\n      options={props.data}\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      getOptionLabel={(option) => option.title}\n      style={{ width: 200, display: 'inline-block', 'vertical-align': 'middle' }}\n      renderInput={(params) => <TextField autoFocus {...params} variant=\"outlined\" label=\"Provincie\"  />}\n    />\n  );\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nexport default function ComboBox(props) {\n  return (\n    <Autocomplete\n      id=\"combo-box-demo\"\n      options={times}\n      getOptionLabel={(option) => option.title}\n      defaultValue={times.find(v => v.title[0])} \n      style={{ width: 200, display: \"inline-block\", verticalAlign: 'middle' }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"outlined\"\n          label=\"Wanneer\"\n        />\n      )}\n    />\n  );\n}\n\nvar times = [\n  { title: \"binnenkort\" },\n  { title: \"Zo snel mogelijk\" },\n  { title: \"Deze week\" },\n];\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/nl-be\";\nimport \"moment/locale/fr\";\n\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nmoment.locale(\"nl-be\");\n\nexport class OpeningHours extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n    };\n  }\n\n  getRelativeTime = () => {\n    return \"morgen om 8:00\";\n  };\n\n  handleRelativeClick = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n    var curr = new Date(); // get current date\n    var currentDay = new Intl.DateTimeFormat(\"en-US\", {\n      weekday: \"long\",\n    }).format(curr);\n    var { openingHours } = this.props;\n    var { open } = this.state;\n\n    var relativeTime = this.getRelativeTime();\n    return (\n      <List dense>\n        {relativeTime && (\n          <ListItem\n            style={{ cursor: \"pointer\" }}\n            onClick={this.handleRelativeClick}\n          >\n            Openingstijden:\n            <ListItemText style={{fontWeight: \"700 !important\"}} primary={relativeTime + \" +\"}></ListItemText>\n          </ListItem>\n        )}\n        {open &&\n          openingHours &&\n          openingHours.map((oh) => (\n            <ListItem\n              selected={currentDay === oh.day}\n              style={{ paddingTop: 0, paddingBottom: 0 }}\n            >\n              <ListItemText\n                primary={\n                  moment(oh.startTime).format(\"dddd - H:mm tot \") +\n                  moment(oh.endTime).format(\"H:mm\")\n                }\n              ></ListItemText>\n            </ListItem>\n          ))}\n      </List>\n    );\n  }\n}\n\nexport default OpeningHours;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/nl-be\";\nimport \"moment/locale/fr\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport OpeningHours from \"./OpeningHours\";\n\nconst useStyles = makeStyles({\n  root: {\n    // display: \"flex\",\n    marginBottom: 20,\n    maxWidth: 450,\n    margin: '0 auto'\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 13,\n  },\n});\n\nmoment.locale(\"nl-be\");\n\nexport default function OrganisationCard(props) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.name}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {props.address}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {/* {props.free ? \"Gratis consultatie\" : \"Betalende consultatie\"} */}\n          {/* <List dense>\n            <ListItem>\n              <ListItemText\n                primary={\n                  props.free ? \"Gratis consultatie\" : \"Betalende consultatie\"\n                }\n              ></ListItemText>\n            </ListItem>\n          </List> */}\n        </Typography>\n        {/* <CardActions> */}\n        <br />\n        <br />\n        <Button\n          size=\"small\"\n          startIcon={<LocationOnIcon />}\n          href={\"https://maps.google.com/?q=\" + props.address}\n        >\n          Toon Locatie\n        </Button>\n        <br />\n        {props.website && (\n          <Button size=\"small\" startIcon={<LinkIcon />} href={props.website}>\n            Bezoek website\n          </Button>\n        )}\n        {/* </CardActions> */}\n        <OpeningHours openingHours={props.openingHours}></OpeningHours>\n      </CardContent>\n    </Card>\n  );\n}\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport ComboBox from \"./ComboBox\";\nimport data from \"../utils/dataUtils\";\n// import SwitchesGroup from \"./SwitchesGroup\";\nimport TimeAutocomplete from \"./TimeAutocomplete\";\nimport OrganisationCard from \"./OrganisationCard\";\nimport styled from \"styled-components\";\n\nvar Box = styled.div`\n  text-align: center;\n`;\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { province: null };\n    // this.state = { province: 'Brussels' };\n  }\n\n  componentDidMount() {\n    console.log(this.props.data);\n  }\n\n  handleChange = (selectedItem, b) => {\n    this.setState({\n      province: selectedItem ? selectedItem.title : null,\n    });\n  };\n\n  render() {\n    return (\n      <Box>\n        <div>\n          <p>\n            Ik wil me{\" \"}\n            <TimeAutocomplete\n            // onChange={this.handleChange}\n            />{\" \"}\n            laten testen in regio{\" \"}\n            <ComboBox\n              onChange={this.handleChange}\n              data={this.props.data.map((val, i) => {\n                return { title: val, year: val };\n              })}\n            />\n          </p>\n        </div>\n\n        {this.state.province &&\n          data.getOrganisationsByProvince(this.state.province).map((org) => {\n            return <OrganisationCard {...org} />;\n          })}\n        {/* <SwitchesGroup ></SwitchesGroup> */}\n        {/* <h2>It is {this.state.date.toLocaleTimeString()}.</h2> */}\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Soa Test\n          </Typography>\n          <Button color=\"inherit\">Meer informatie</Button>\n          <Button color=\"inherit\">Over ons</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport dataUtils from \"./utils/dataUtils\";\nimport Search from \"./components/Search\";\nimport AppBar from \"./components/AppBar\";\nimport { palette, spacing } from \"@material-ui/system\";\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  ${palette}\n  ${spacing}\n`;\nconst values = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920,\n};\nfunction App() {\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        breakpoints: {\n          keys: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\n          up: (key) => `@media (min-width:${values[key]}px)`,\n        },\n        palette: {\n          primary: blue,\n          secondary: {\n            main: \"#1976d2\",\n          },\n        },\n      }),\n    []\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar />\n      <Box p={3}>\n        \n            <Search data={dataUtils.getProvinces()} />\n          \n        \n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}